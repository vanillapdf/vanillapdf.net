# This is a basic workflow to help you get started with Actions

name: Sanity check

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  push:
    branches: [ "master" ]

  pull_request:
    branches: [ "master" ]

# Enable only minimum required permissions
permissions:
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  sanity-check:
    name: sanity-check-${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        dotnet-version: [ '6.x', '8.x' ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Prepare specific version of dotnet to be used
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      # https://github.com/actions/setup-dotnet
      # Matrix testing with temporary global.json creation
      # Note: Unless a concrete version is specified in the global.json file, the latest .NET version installed on the runner
      # (including preinstalled versions) will be used by default.
      # To control this behavior you may want to use temporary global.json files
      - name: Create temporary global.json
        run: echo '{"sdk":{"version": "${{ steps.stepid.outputs.dotnet-version }}"}}' > ./global.json

      # Build and test for current dotnet version
      - name: Build and test with ${{ matrix.dotnet-version }} on ${{ matrix.os }}
        run: dotnet test src/vanillapdf.net.sln --configuration Release -nowarn:CS1591
